import streamlit as st
import requests

st.set_page_config(page_title="LifeHUB", page_icon="üíô")

# –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
if "history" not in st.session_state:
    st.session_state.history = []

# Hugging Face API
API_URL = "https://api-inference.huggingface.co/models/HuggingFaceH4/zephyr-7b-alpha"
HEADERS = {"Authorization": "Bearer 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"}

def query_huggingface(prompt):
    payload = {"inputs": prompt}
    response = requests.post(API_URL, headers=HEADERS, json=payload)
    if response.status_code == 200:
        try:
            return response.json()[0]["generated_text"]
        except:
            return "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –æ—Ç–≤–µ—Ç–∞."
    else:
        return "–û—à–∏–±–∫–∞ API –∏–ª–∏ –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω."

# –í—ã–±–æ—Ä –≤–∫–ª–∞–¥–∫–∏
tab = st.sidebar.radio("–ù–∞–≤–∏–≥–∞—Ü–∏—è", ["–≠–º–æ—Ü–∏–∏", "–ü—Ä–∞–≤–æ"])

# --- –í–∫–ª–∞–¥–∫–∞ –≠–ú–û–¶–ò–ò ---
if tab == "–≠–º–æ—Ü–∏–∏":
    st.title("LifeHUB ‚Äî –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫")
    st.markdown("–ö–∞–∫ —Ç—ã —Å–µ–±—è —Å–µ–π—á–∞—Å —á—É–≤—Å—Ç–≤—É–µ—à—å?")

    emotions = {
        "üòü –¢—Ä–µ–≤–æ–≥–∞": "anxiety",
        "üò¢ –ü–µ—á–∞–ª—å": "sadness",
        "üòê –ê–ø–∞—Ç–∏—è": "apathy",
        "üò∞ –ü–∞–Ω–∏–∫–∞": "panic",
        "üò† –ó–ª–æ—Å—Ç—å": "anger",
        "üòî –û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ": "loneliness"
    }

    selected = st.selectbox("–í—ã–±–µ—Ä–∏ —ç–º–æ—Ü–∏—é", list(emotions.keys()))
    user_input = st.text_area("–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å...")

    if st.button("–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å"):
        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞..."):
            prompt = f"–ß–µ–ª–æ–≤–µ–∫ –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç {selected}. –û–Ω –æ–ø–∏—Å–∞–ª —ç—Ç–æ —Ç–∞–∫: {user_input}. –û—Ç–≤–µ—Ç—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏ —ç–º–ø–∞—Ç–∏–µ–π."
            answer = query_huggingface(prompt)
            st.session_state.history.append(("–≠–º–æ—Ü–∏–∏", user_input, answer))
            st.success(answer)

# --- –í–∫–ª–∞–¥–∫–∞ –ü–†–ê–í–û ---
elif tab == "–ü—Ä–∞–≤–æ":
    st.title("LifeHUB ‚Äî –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫")
    st.markdown("–ó–∞–¥–∞–π —Å–≤–æ–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å. AI –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è –ø–æ–º–æ—á—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ.")

    legal_input = st.text_area("–í–æ–ø—Ä–æ—Å:")

    if st.button("–ü–æ–ª—É—á–∏—Ç—å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç"):
        with st.spinner("AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –≤–æ–ø—Ä–æ—Å..."):
            prompt = f"–¢—ã —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫. –û—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É –Ω–∞ –≤–æ–ø—Ä–æ—Å: {legal_input}"
            answer = query_huggingface(prompt)
            st.session_state.history.append(("–ü—Ä–∞–≤–æ", legal_input, answer))
            st.success(answer)

# --- –ë–ª–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏ (–æ–±—â–∏–π) ---
if st.session_state.history:
    st.markdown("### –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤:")
    for idx, (topic, q, a) in enumerate(reversed(st.session_state.history[-10:]), 1):
        st.markdown(f"**{idx}. [{topic}]**
**–¢—ã:** {q}

**LifeHUB:** {a}")

    if st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"):
        st.session_state.history.clear()
